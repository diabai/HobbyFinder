package diabai.uw.tacoma.edu.hobbyfinder;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import com.facebook.AccessToken;
import com.facebook.CallbackManager;
import com.facebook.FacebookCallback;
import com.facebook.FacebookException;
import com.facebook.FacebookSdk;
import com.facebook.GraphRequest;
import com.facebook.GraphResponse;
import com.facebook.LoggingBehavior;
import com.facebook.Profile;
import com.facebook.login.LoginResult;
import com.facebook.login.widget.LoginButton;
import com.facebook.login.widget.ProfilePictureView;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.Arrays;

import diabai.uw.tacoma.edu.hobbyfinder.user.User;

public class LogInFragment extends Fragment {
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";
    public final static String USER_SELECTED = "user_selected";
    /**
     * URL to add check if user exists
     */
    private final static String CHECK_IF_USER_EXISTS
            = "http://cssgate.insttech.washington.edu/~_450bteam1/checkIfUserExists.php?";

    private String mParam1;
    private String mParam2;

    private ProfilePictureView mProfilePictureView;
    private LogInFragmentInteractionListener mListener;
    private CallbackManager mCallbackManager;
    private TextView mTxtView;

    /**
     * Default constructor
     */
    public LogInFragment() {
        // Required empty public constructor
    }

    /**
     * This method is generated by default when creating a fragment
     *
     * @param param1
     * @param param2
     * @return CreateAccountFragment
     */
    public static LogInFragment newInstance(String param1, String param2) {
        LogInFragment fragment = new LogInFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    /**
     * Method generated by default once a fragment is created
     *
     * @param savedInstanceState Bundle object containing information that might have been saved
     *                           from previous fragments/activity
     */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mCallbackManager = CallbackManager.Factory.create();
    }

    /**
     * This method contains the widgets to be displayed once the fragment is launched.
     *
     * @param inflater           The layout inflater
     * @param container          The current container
     * @param savedInstanceState Data that might have been saved from a previous fragment or activity
     * @return view The graphical interface of this fragment
     */
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        //Inflating the layout when this fragment is launched
        View view = inflater.inflate(R.layout.fragment_log_in, container, false);
        if(isLoggedIn()) {
            //check if user exist then bypass and go to dashboard
            mListener.checkIfExists(buildCheckIfExistsUrl(view));
        }

        return view;
    }

    /**
     * Contains all the facebook button interactions and responses.
     *
     * @param v                  the view
     * @param savedInstanceState the saved instance
     */
    @Override
    public void onViewCreated(final View v, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(v, savedInstanceState);
        // Initializing
        LoginButton mLoginButton = (LoginButton) v.findViewById(R.id.login_button);
        mTxtView = (TextView) v.findViewById(R.id.log_in_txtView);
        mLoginButton.setFragment(this);

        // Requesting permissions to access the following info from the user's facebook account
        mLoginButton.setReadPermissions(Arrays.asList(
                "public_profile", "user_birthday", "user_friends"));

        // Login button Callback to handle Login related events
        mLoginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {
            /**
             * On success gets called when a user logs in for the
             * first time.
             * @param loginResult the result from the login
             */
            @Override
            public void onSuccess(LoginResult loginResult) {
                // GraphRequest to get the data needed from the facebook Graph
                GraphRequest request = GraphRequest.newMeRequest(loginResult.getAccessToken(),
                        new GraphRequest.GraphJSONObjectCallback() {
                            @Override
                            public void onCompleted(JSONObject object, GraphResponse response) {
                                FacebookSdk.addLoggingBehavior(LoggingBehavior.REQUESTS);

                                //To see   permissions are enabled
                                Log.v("onCompleted ****",
                                        AccessToken.getCurrentAccessToken()
                                                .getPermissions().toString());

                                // Getting json objects into strings
                                try {
                                    String id = object.getString("id");

                                    // The line below will get all the fields available in the JSON object
                                    mProfilePictureView = (ProfilePictureView) getActivity().findViewById(R.id.pro_image);
                                    mProfilePictureView.setProfileId(id);

                                    //check if user exist then bypass and go to dashboard
                                    mListener.checkIfExists(buildCheckIfExistsUrl(v));

                                    // Once success is done we just send the user information
                                    // over to create account
                                    mListener.setUser(new User(object.getString("id"),
                                            object.getString("name"),
                                            object.getString("email"),
                                            object.getString("gender"),
                                            "hometown"));
                                } catch (JSONException e) {
                                    e.printStackTrace();
                                }
                            }
                        });

                //Saving the stuff in case we need to use it in another fragment
                Bundle parameters = new Bundle();
                parameters.putString("fields", "id, name, email, gender, birthday");
                request.setParameters(parameters);
                request.executeAsync();
            }

            /**
             * On cancel gets called when a user cancels the log in
             * using Facebook.
             */
            @Override
            public void onCancel() {
                mTxtView.setText("Login cancelled");
            }

            /**
             * When there is an error with the Facebook log in button.
             * @param error the error pased in
             */
            @Override
            public void onError(FacebookException error) {
                // Log in case we get an exception while logging in
                Log.v("LoginActivity onError", error.getCause().toString());
            }
        });
    }

    /**
     * Called when the activity is no longer visible to the user,
     */
    @Override
    public void onStop() {
        super.onStop();
    }

    /**
     * When the user is done with the subsequent activity
     *
     * @param requestCode the request code int
     * @param resultCode  the result code int
     * @param data        the intent data
     */
    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        mCallbackManager.onActivityResult(requestCode, resultCode, data);
    }

    /**
     * Method for when the fragment is attached to its parent activity
     *
     * @param context the context
     */
    @Override
    public void onAttach(Context context) {
        super.onAttach(context);
        if (context instanceof LogInFragmentInteractionListener) {
            mListener = (LogInFragmentInteractionListener) context;
        } else {
            throw new RuntimeException(context.toString()
                    + " must implement CreateAccountFragmentInteractionListener");
        }
    }

    /**
     * Method for when the fragment is detached from its parent activity
     */
    @Override
    public void onDetach() {
        super.onDetach();
        mListener = null;
    }

    /**
     * Checks if a user is logged into facebook. We will
     * have to check with DB if user has account as well.
     *
     * @return true if user is logged in
     */
    public boolean isLoggedIn() {
        AccessToken accessToken = AccessToken.getCurrentAccessToken();
        return accessToken != null;
    }

    /**
     * Builds the url for adding a user.
     *
     * @param v the view
     * @return returns the url
     */
    private String buildCheckIfExistsUrl(View v) {
        StringBuilder sb = new StringBuilder(CHECK_IF_USER_EXISTS);
        try {
            String userId = Profile.getCurrentProfile().getId();
            sb.append("id=");
            sb.append(userId);
            Log.i("UserAddFragment", sb.toString());
        } catch (Exception e) {
            Toast.makeText(v.getContext(), "Something wrong with the url" + e.getMessage(), Toast.LENGTH_LONG)
                    .show();
        }
        return sb.toString();
    }

    /**
     * Log in fragment interaction listener for
     * creating a user and also checking if a user exists.
     */
    public interface LogInFragmentInteractionListener {
        void setUser(User user);
        void checkIfExists(String url);
    }
}
